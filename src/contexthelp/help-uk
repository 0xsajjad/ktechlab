<!-- item: PIC_IC -->

<!-- item: complex -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p>Комплексний коефіцієнт підсилення є мірою того, наскільки проходження схеми впливає на амплітуду і фазу синусоїдального вхідного сигналу. Виражається комплексим числом.</p>
</body></html>
<!-- item: datasheet -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify">Технічну специфікацію компонентів електроніки викладають у так званих <span style="font-weight:600">технічних описах</span>. Такі описи надаються виробниками і, зазвичай можуть бути отримані з домашніх сторінок відповідних компаній. Чудовим пошуковим рушієм для типових технічних описів є цей сайт:</p>
<p align="justify"><a href="http://www.datasheetarchive.com">www.datasheetarchive.com</a></p>
</body></html>
<!-- item: dp/arrow -->
Позначте лінію для розташовування кінців
<!-- item: dp/ellipse -->
Натисніть і утримуйте ліву кнопку миші, щоб позначити один із кутів «прямокутної рамки» еліпса, потім перетягніть вказівник у її протилежний кут.
<!-- item: dp/line -->
Позначте лінію для розташовування кінців
<!-- item: dp/rectangle -->
Click and hold the left mouse button to indicate one corner of the ‘bounding rectangle’ of the ellipse, then move your mouse to the opposite corner.
<!-- item: dp/text -->
Двічі клацніть на текстовому елементі, щоб визначити текст
<!-- item: ec/555 -->
Типовий контролер інтерфейсу таймера
<!-- item: ec/ac_current -->
Надає спектр сигналів силою струму
<!-- item: ec/adc -->
Перетворює аналоговий сигнал на цифровий
<!-- item: ec/adder -->
Елемент, призначений для утворення суми двох операндів. Додає три однобітових двійкових числа, A, B і >; A і B є операндами, а > — біт, отриманий на попередньому менш значному етапі. Виводить результат у двобітовому форматі: сигнал перенесення і суму, як сигнали C і S, де сума = 2C + S￼.
<!-- item: ec/ammeter -->
Вставте послідовно до схеми, щоб виміряти силу струму.
<!-- item: ec/and -->
Вихід відкрито тоді і лише тоді, коли відкрито усі входи.
<!-- item: ec/battery -->
Створює різницю потенціалів.
<!-- item: ec/bcd_to_seven_segment -->
Перетворює вхідні сигнали у двійковому кодуванні у формат, придатний для показу на сегментному індикаторі.<br><br>Нормальна робота: <i>lt</i> (Lamp Test) та <i>rb</i> (Ripple Blanking) підтримуються відкритими, <i>en</i> (Enable) підтримується закритим.
<!-- item: ec/bidir_led -->
Двобічний світлодіод
<!-- item: ec/binary_counter -->
Містить внутрішній лічильник, який змінює значення, коли через контакт входу годинника <i>&gt;</i> подається пульсація.<br><br>Нормальний режим роботи: <i>en</i> (Enable або Увімкнути) і <i>u/d</i> (Up/Down або Вгору/Вниз) утримуються відкритими, <i>r</i> (Reset або Скинути) закрито.
<!-- item: ec/buffer -->
Очищує логічний вхід із виведенням стану «відкрито» або «закрито» залежно від рівня вхідного перемикання.
<!-- item: ec/bus -->
Об’єднує декілька з’єднань у одне.
<!-- item: ec/capacitor -->
Зберігає електричний заряд.<br><br>Напругу між обкладками конденсатора та ємність пов’язано формулою <i>Заряд = Ємність x Напруга</i>.
<!-- item: ec/cccs -->

<!-- item: ec/ccvs -->

<!-- item: ec/clock_input -->
Генератор прямокутних імпульсів, виводить логічні струми «відкрито»/«закрито» з регулярними інтервалами.
<!-- item: ec/current_source -->
Є джерелом сталого струму.
<!-- item: ec/currentprobe -->
Показує силу струму у точці зондування на осцилоскопі.
<!-- item: ec/d_flipflop -->
Запам’ятовує стан входу та видає його на вихід після надходження імпульсу синхронізації.
<!-- item: ec/dac -->
Перетворює вхідний цифровий сигнал на вихідний аналоговий.
<!-- item: ec/demultiplexer -->
Розділяє вхідний потік даних на компоненти. Значення вхідного сигналу передається на вихід «X», який визначається двійковим числом, що задається входами «A».
<!-- item: ec/diode -->
Дозволяє проходження струпу у напрямку, позначеному стрілкою, якщо досягнуто певної різниці потенціалів.
<!-- item: ec/dpdt_toggle -->
Перемикач із двома полюсами і двома напрямками.
<!-- item: ec/dpst_toggle -->
Перемикач із двома полюсами і одним напрямком.
<!-- item: ec/external_connection -->
Точка з’єднання схеми із зовнішнім об’єктом — механічним компонентом або зовнішньою схемою, якщо елемент є частиною підсхеми.
<!-- item: ec/fixed_voltage -->
Точка фіксованої напруги для з’єднання з нею компонентів.
<!-- item: ec/ground -->
Точка землі (0 В)
<!-- item: ec/inductor -->

<!-- item: ec/inverter -->
Вихід є логічно інвертованим сигналом відносно вхідного логічного стану.
<!-- item: ec/jk_flipflop -->
Стан виходу визначається за J і K, коли надходить сигнал синхронізації.
<!-- item: ec/keypad -->
Числовий масив перемикачів «натиснути, щоб з’єднати» із трьома рядками і придатною до налаштовування кількістю стовпчиків клавіш.
<!-- item: ec/led -->
Світлодіод
<!-- item: ec/logic_input -->
Дає визначений користувачем логічний стан.<br><br>Натисніть для сигналу відкриття або перетягніть вказівник назовні, щоб відкрити вихід.
<!-- item: ec/logic_output -->
Показує логічний стан вхідного сигналу.
<!-- item: ec/magnitudecomparator -->
Порівнює два двійкові числа і створює вихідний сигнал для позначення того, яке з двійкових чисел є більшим. Має 3 каскадних входи:<ul><li>I: A &gt; B</li><li>I: A &lt; B</li><li>I: A = B</li></ul>і 3 виходи:<ul><li>O: A &gt; B</li><li>O: A &lt; B</li><li>O: A = B</li></ul>
<!-- item: ec/matrix_display -->
Матричний дисплей з LED із придатною до налаштовування кількістю стовпчиків і рядків.
<!-- item: ec/matrix_display_driver -->
Різновид знакосинтезувального індикатора, елементи якого згруповані за рядками та стовпцями. Матричний індикатор призначений для виведення зображень символів, спеціальних знаків та графічних об’єктів на різноманітних пристроях для зорового сприйняття.
<!-- item: ec/multiplexer -->
Поєднує вхідний потік даних у один потік. Значення вхідного сигналу, що визначається входами «A» передається на вихід.
<!-- item: ec/nand -->
Вихід закрито, якщо усі входи відкрито.
<!-- item: ec/nemosfet -->

<!-- item: ec/njfet -->

<!-- item: ec/nor -->
Вихід відкрито, якщо усіх входи закрито.
<!-- item: ec/npnbjt -->

<!-- item: ec/opamp -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify"><span style="font-weight:600">Операційний підсилювач</span> (opamp) — інтегрований універсальний підсилювач, поведінку якого можна просто налаштувати за допомогою зовнішніх компонентів. Ця висока гнучкість досягається через його високий коефіцієнт підсилення розімкненою петлею зворотного зв’язку, <span style="font-style:italic">A</span><span style="vertical-align:sub">0</span>, який збільшує різницю вхідних потенціалів. <a href="ktechlab-help:///transferfunction">Функція передавання</a>:</p>
<p align="center"><img src=opamp.png ></p>
<p align="center"><img src=tf_op.png ></p>
<p align="justify">Коефіцієнт підсилення <span style="font-style:italic">A</span><span style="vertical-align:sub">0</span> є значенням <a href="ktechlab-help:///complex">комплексного</a> підсилення <span style="font-style:italic;text-decoration:underline">A</span>, якщо покласти частоту f = 0 Гц (стала напруга) і є ідеально нескінченним, на практиці ж залежить від типу і має значення від 10<span style="vertical-align:super">5</span> до 10<span style="vertical-align:super">7</span>.</p>
<p align="justify">Така поведінка підсилювача досягається <a href="ktechlab-help:///feedback">зворотним зв’язком</a> входу щодо виходу, який створюється дискретними компонентами. Таким чином замикається <a href="ktechlab-help:///controlloop">петля керування</a>, що має усунути відхилення, отже вхідний струм U<span style="vertical-align:sub">E </span>. Звідси, окрім деяких виключень, обидва входи схеми операційного підсилювача повинні мати однакові <a href="ktechlab-help:///potential">потенціали</a>. Така реалізація схеми є дуже корисною для обчислень і діагностування помилок!</p>
<p align="justify">У більшості випадків операційні підсилювачі можна вважати ідеальними і <a href="ktechlab-help:///linear">лінійними</a> у операційному діапазоні:</p>
<ul type="disc"><li><span style="font-style:italic">A = A</span><span style="vertical-align:sub">0</span> = &#8734;</li>
<li>R<span style="vertical-align:sub">E+ </span>= R<span style="vertical-align:sub">E- </span>= &#8734;&#937;</li>
<li>R<span style="vertical-align:sub">A</span> = 0&#937;</li></ul>
<p align="justify">Характеристики справжніх операційних підсилювачів викладено у відповідній <a href="ktechlab-help:///datasheet">технічній документації</a>.</p>
<p><span style="font-weight:600">Застосування:</span></p>
<ul type="disc"><li><a href="ktechlab-example:///opamps/inverting-amplifier.circuit">Інверсійний підсилювач</a>    </li>
<li><a href="ktechlab-example:///opamps/noninverting-amplifier.circuit">Неінверсійний підсилювач</a>    </li>
<li><a href="ktechlab-example:///opamps/decoupler.circuit">Розв’язка</a>    </li>
<li><a href="ktechlab-example:///opamps/instrumentation-amplifier.circuit">Інструментальний підсилювач</a>    </li>
<li><a href="ktechlab-example:///opamps/pid_controller.circuit">Контролер PID</a>    </li>
<li><a href="ktechlab-example:///opamps/analog-computer.circuit">Аналоговий комп’ютер</a>    </li>
<li><a href="ktechlab-example:///opamps/active-filter.circuit">Активний фільтр</a>    </li>
<li><a href="ktechlab-example:///opamps/comperator.circuit">Порівнювач</a>    </li>
<li><a href="ktechlab-example:///opamps/schmitt-trigger">Перемикач Шмітта</a></li></ul>
</body></html>
<!-- item: ec/or -->
Вихід відкрито, якщо відкрито принаймні один із входів. Вихід закрито, якщо усі входи закрито.
<!-- item: ec/parallel_port -->
Контакти поділено на три регістри.<br><br><b>Контакти даних</b><br><br>Контакти даних можна налаштувати або усі на вхід, або усі на вихід. Такими контактами є:<ul><li><b>D<i>[0..7]</i></b></li></ul><br><b>Контакти стану</b><br><br>Контакти стану призначено лише для читання. Це:<ul><li><b>ERR</b> - Error</li><li><b>ON</b> - Online</li><li><b>PE</b> - Paper End</li><li><b>ACK</b> - Acknowledge</li><li><b>BUSY</b> - Busy</li></ul><br><b>Контакти керування</b><ul><li><b>STR</b> - Strobe</li><li><b>AUT</b> - Auto Feed</li><li><b>INIT</b> - Init</li><li><b>SEL</b> - Select</li></ul><br>Інші контакти з’єднано із землею.
<!-- item: ec/pemosfet -->

<!-- item: ec/pic -->
Компонент PIC уможливлює імітацію роботи програми PIC.<br><br>Придатна до завантаження програма PIC має зберігатися у одному з таких форматів:<ul><li>Асемблер (.asm)</li><li>FlowCode (.flowcode)</li><li>Файл символів (.cod)</li><li>Microbe (.microbe, .basic)</li><li>Код мовою C (.c)</li></ul>Двічі клацніть на компоненті PIC, щоб відкрити файл початкових кодів програми.<br><br>Якщо файл коду програми написано мовою асемблера, відкритий текстовий файл буде автоматично пов’язано із імітацією. Ви можете керувати виконанням програми з текстового документа за допомогою засобів керування діагностикою.<br><br>Кнопки керування:<ul><li>Пуск — виконати програму PIC з позиції, де її було призупинено, або розпочати виконання, якщо виконання ще не було призупинено.</li><li>Пауза — призупинити імітацію на поточній позиції виконання.</li><li>Стоп — відновити початковий стан усіх частин імітації.</li><li>Перезавантажити — повторно прочитати програму PIC з диска і перезапустити gpsim.</li></ul>
<!-- item: ec/pjfet -->

<!-- item: ec/pnpbjt -->

<!-- item: ec/potentiometer -->
Складається з резистора із контактами на кінцях і центрального контакту, який з’єднується із рухомою позицією на резисторі.
<!-- item: ec/probe -->
З’єднайте цей зонд із точкою схеми, де треба виміряти логічне значення. Значення буде показано на панелі осцилоскопа.
<!-- item: ec/ptb_switch -->

<!-- item: ec/ptm_switch -->

<!-- item: ec/ram -->
У оперативній пам’яті зберігається набір слів; кожне слово складається з <i>розмір слова</i> бітів даних.<br><br>Щоб прочитати дані, встановіть стан «відкрито» для контактів CS (<i>chip select</i>) і OE (<i>output enable</i>) і виберіть слово за допомогою контактів адреси <i>A*</i>. Слово буде виведено на контакти виведення даних: <i>DO*</i>.<br><br>Щоб записати дані, встановіть стан «відкрито» для контактів CS (<i>chip select</i>) і WE (<i>write enable</i>) і виберіть адресу для запису за допомогою контактів <i>A*</i>. Запис вибраного слова здійснюється за допомогою контактів вхідних даних: <i>DI*</i>.<br><br><i>Розмір адреси</i> — кількість бітів, які визначають адреси; отже, загалом у модулі можна зберегти 2^<sup><i>Розмір адреси</i></sup> слів.
<!-- item: ec/resistor -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify"><span style="font-weight:600">Резистор</span> обмежує струм відповідно до закону Ома, який визначає пропорційну залежність між силою струму і напругою. Якщо взяти одиничний коефіцієнт пропорційності, отримаємо одиницю виміру опору:</p>
<p align="center"><img src=ohm.png ></p>
<p align="center"><img src=ohm_unit.png ></p>
<p align="justify">Отже, опір — міра того, наскільки погано резистор пропускає струм. На практиці використовують іншу міру, яка визначає, наскільки добре пропускається струм. Обернена до опору величина називається <span style="font-style:italic">реактивною провідністю</span>:</p>
<p align="center"><img src=siemens.png ></p>
<p align="center"><img src=siemens_unit.png ></p>
<p align="justify">Кращого розуміння можна досягти шляхом ілюстрування формул у формі речень, які пояснюють суть явища. Тут це дуже просто:</p>
<p align="justify">&quot;Резистор із опором у 1 ом, якщо маємо на його контактах напругу у 1 вольт, пропускатиме струм із силою у 1 ампер.&quot;</p>
<p><span style="font-weight:600">Приклади:</span></p>
<ul type="disc"><li><a href="ktechlab-example:///basic/resistors-series.circuit">Послідовне з’єднання</a></li>
<li><a href="ktechlab-example:///basic/resistors-parallel.circuit">Паралельне з’єднання</a></li></ul>
</body></html>
<!-- item: ec/resistordip -->
Набір резисторів із однаковими опорами, запакований у корпус DIP.
<!-- item: ec/roto_switch -->
Обертовий перемикач
<!-- item: ec/serial_port -->
Інтерфейс послідовного порту. Контакти:<br><ul><li><b>CD</b> - Carrier Detect (керування, вихід)</li><li><b>RD</b> - Received Data (дані; вихід)</li><li><b>TD</b> - Transmitted Data (дані; вхід)</li><li><b>DTR</b> - Data Terminal Ready (керування; вхід)</li><li><b>GND</b> - Signal Ground (земля)</li><li><b>DSR</b> - Data Set Ready (керування; вхід)</li><li><b>RTS</b> - Request to Send (керування; вхід)</li><li><b>CTS</b> - Clear to Send (керування; вихід)</li><li><b>RI</b> - Ring Indicator (керування; вихід)</li></ul>
<!-- item: ec/seven_segment -->
Сегментний індикатор із десятковою крапкою. Можна налаштувати як типовий катодний або типовий анодний.
<!-- item: ec/signal_lamp -->
Проста сигнальна лампа розжарювання із опором у 100 Ом, якщо з’єднано послідовно.
<!-- item: ec/spdt_toggle -->
Перемикач із одним полюсом і двома напрямками.
<!-- item: ec/spst_toggle -->
Перемикач із одним полюсом і одним напрямком.
<!-- item: ec/sr_flipflop -->
Створює стан «відкрито» на виході, якщо відкрито <i>set</i>, і стан «закрито», якщо відкрито <i>reset</i>.
<!-- item: ec/subcircuit -->

<!-- item: ec/variablecapacitor -->
Зберігає електричний заряд.<br><br>Напругу між обкладками конденсатора та ємність пов’язано формулою <i>Заряд = Ємність x Напруга</i>.
<!-- item: ec/variableresistor -->
Обмежує струм відповідно до закону Ома
<!-- item: ec/vccs -->

<!-- item: ec/vcvs -->

<!-- item: ec/voltage_signal -->
Надає спектр сигналів напругою.
<!-- item: ec/voltageprobe -->
Показує напругу у точці зондування на осцилоскопі.
<!-- item: ec/voltmeter -->
Вставте його у схему паралельно, щоб виміряти напругу між двома точками.
<!-- item: ec/xnor -->
Шлюз виключного АБО-НІ. Вихід буде закрито, якщо відкрито лише один з входів.
<!-- item: ec/xor -->
Шлюз виключного АБО. Вихід буде відкрито, якщо відкрито лише один вхід.
<!-- item: feedback -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p>Цього запису довідки українською ще немає. Допоможіть KTechlab, створивши цей запис: натисніть кнопку &quot;Змінити&quot;!</p>
</body></html>
<!-- item: flow/callsub -->
Виклик підпрограми. Після завершення роботи підпрограми виконання коду буде продовжено з цієї точки.
<!-- item: flow/delay -->
Затримати виконання програми на фіксований проміжок часу.
<!-- item: flow/embed -->
Двічі клацніть на елементі, щоб редагувати вбудований до нього код.
<!-- item: flow/end -->
Завершити виконання програми, перемкнувши контролер інтерфейсу у режим сну. На відміну від частини «Початок», ця частина діаграми є необов’язковою для належного виконання програми.
<!-- item: flow/forloop -->
Код, що міститься у циклі for буде виконуватися повторно. Типово, змінна циклу під час кожного виконання збільшуватиметься на одиницю. Змінити крок збільшення змінної можна призначивши для параметра «Крок» значення, яке є відмінним від 1.<br><br>Виконання циклу for буде завершено, якщо значення, що зберігається у змінній стане рівним кінцевому значенню.
<!-- item: flow/keypad -->
Отримати значення натиснутої клавіші з клавіатурної панелі, яку з’єднано з PIC.
<!-- item: flow/readport -->
Надати змінній значення з порту.
<!-- item: flow/repeat -->
Повторно виконувати код, доки не почне справджуватися контрольна умова. Виконання умови перевіряється після виконання коду.<br><br>У цьому полягає відмінність цього циклу від циклу «While», у якому виконання умови перевіряється до виконання коду.
<!-- item: flow/setpin -->
Встановлює для контакту на порті значення «відкрито» або «закрито». Контакт має бути налаштовано як вихід.
<!-- item: flow/sevenseg -->
Вивести дані на сегментний індикатор.
<!-- item: flow/start -->
Визначає початкову точку виконання програми.
<!-- item: flow/sub -->
Визначає вхідну точку підпрограми. Викликати підпрограму можна командою «Call Підпрограма»
<!-- item: flow/testpin -->
Точка розгалуження за умовою, залежно від стану (відкрито або закрито) контакту.
<!-- item: flow/unary -->
Для виконання унарної дії потрібна лише одна змінна. Підтримувані дії:<br><ul><li><b>Зсув ліворуч</b> — зсув двійкових бітів ліворуч (із відкиданням кінцевого біта).</li><li><b>Зсув праворуч</b> — зсув двійкових бітів праворуч (із відкиданням початкового біта).</li><li><b>Збільшення</b> — збільшення значення змінної на 1. Збільшення значення 255 циклічно дасть 0.</li><li><b>Зменшення</b> — зменшення значення змінної на 1. Зменшення значення 0 циклічно дасть 255.</li></ul>
<!-- item: flow/varassignment -->
Запис результатів обчислення виразу до змінної. Вираз можна записувати у багатьох формах. Приклади:<ul><li><b>x = 2</b></li><li><b>x = y + 3</b></li><li><b>x = y + z</b></li><li><b>x = 2 * y</b></ul>
<!-- item: flow/varcomparison -->
Точка розгалуження за умовою, яка полягає у порівнянні двох значень. Підтримувані формати порівняння:<ul><li><b>x == y</b> — рівність: істина, якщо x має те саме значення, що і y.</li><li><b>x &lt; y</b> — менше: істина, якщо x менше за y.</li><li><b>x &gt; y</b> — більше: істина, якщо x більше за y.</li><li><b>x &lt;= y</b> — менше або дорівнює: істина, якщо x менше або дорівнює y.</li><li><b>x &gt;= y</b> — більше або дорівнює: істина, якщо x більше або дорівнює y.</li><li><b>x != y</b> — не дорівнює: істина, якщо x має значення, яке не дорівнює значенню y.</li></ul>
<!-- item: flow/while -->
Повторно виконувати код, доки не перестане справджуватися задана умова. Виконання умови перевіряється до виконання коду.<br><br>Цим цей цикл відрізняється від циклу «Repeat», де перевірка виконання умови виконується після виконання коду.
<!-- item: flow/writeport -->
Встановлює стан порту (відкрито або закрито) за вказаним значенням. Встановлювати значення можна лише для контактів, які налаштовано як виходи.
<!-- item: linear -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p>Цього запису довідки українською ще немає. Допоможіть KTechlab, створивши цей запис: натисніть кнопку &quot;Змінити&quot;!</p>
</body></html>
<!-- item: storage -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p><span style="font-weight:600">Елементи-накопичувачі</span> — елементи, які можуть зберігати електричну або механічну енергію і повертати її.</p>
<p>У електроніці це:</p>
<ul type="disc"><li>Конденсатор</li>
<li>Індукційна котушка</li></ul>
<p>У механіці:</p>
<ul type="disc"><li>Матеріальне тіло (маса)</li>
<li>Пружина</li></ul>
</body></html>
<!-- item: transferfunction -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify"><span style="font-weight:600">Функція передавання</span> — математична модель системи. Зазвичай, отримується діленням отриманого вихідного сигналу на відповідний йому вхідний сигнал. Множенням функції передавання на будь-який вхідний сигнал ми отримаємо вихідний сигнал.</p>
<p align="justify">У найпростішому випадку <a href="ktechlab-help:///linear">лінійної</a> <a href="ktechlab-help:///system">системи</a> з одним входом і одним виходом без <a href="ktechlab-help:///storage">елементів-накопичувачів</a> функція передавання є числовим коефіцієнтом підсилення. У цьому випадку поведінка системи не залежить від вхідного сигналу.</p>
<p align="justify">Якщо додати у схему елементи-накопичувачі коефіцієнт перетвориться на <a href="ktechlab-help:///complex">комплексний</a> у частотній області. Тоді функція передавання міститиме інформацію щодо залежного від частоти підсилання та фазового зсуву у статичному випадку (тобто випадку із незмінною поведінкою системи з часом). Що описати динамічну поведінку системи, використовують функцію передавання у області комплексної змінної, яка містить дані щодо змін у схемі. Відповідним вхідним сигналом у цьому випадку є вхідний імпульс у формі функції Дірака. Такий імпульс є суперпозицією <span style="font-style:italic">усіх</span> частот із однією амплітудою, отже може зібрати усю потрібну інформацію щодо системи.</p>
<p align="justify">До речі, така реалізація має практичний бік. Якщо вважати постріл імпульсом Дірака, ми можемо ініціювати постріл на відстані і записати результат спостереження за звуком. Таким чином ми отримаємо функцію передавання місцевості, де відбувся постріл. Якщо <a href="ktechlab-help:///convolution">згорнути</a> результати з будь-яким звуковим сигналом, ми почуємо звук таким, ніби його відтворювали на місці пострілу.</p>
</body></html>
