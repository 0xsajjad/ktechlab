<!-- item: PIC_IC -->

<!-- item: complex -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p>Цього запису довідки українською ще немає. Допоможіть KTechlab, створивши цей запис: натисніть кнопку &quot;Змінити&quot;!</p>
</body></html>
<!-- item: datasheet -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify">Технічну специфікацію компонентів електроніки викладають у так званих <span style="font-weight:600">технічних описах</span>. Такі описи надаються виробниками і, зазвичай можуть бути отримані з домашніх сторінок відповідних компаній. Чудовим пошуковим рушієм для типових технічних описів є цей сайт:</p>
<p align="justify"><a href="http://www.datasheetarchive.com">www.datasheetarchive.com</a></p>
</body></html>
<!-- item: dp/arrow -->
Позначте лінію для розташовування кінців
<!-- item: dp/ellipse -->

<!-- item: dp/line -->
Позначте лінію для розташовування кінців
<!-- item: dp/rectangle -->

<!-- item: dp/text -->
Двічі клацніть на текстовому елементі, щоб визначити текст
<!-- item: ec/555 -->
Типовий контролер інтерфейсу таймера
<!-- item: ec/ac_current -->
Надає спектр сигналів силою струму
<!-- item: ec/adc -->
Перетворює аналоговий сигнал на цифровий
<!-- item: ec/adder -->

<!-- item: ec/ammeter -->
Вставте послідовно до схеми, щоб виміряти силу струму.
<!-- item: ec/and -->
Вихід відкрито тоді і лише тоді, коли відкрито усі входи.
<!-- item: ec/battery -->
Створює різницю потенціалів.
<!-- item: ec/bcd_to_seven_segment -->
Перетворює вхідні сигнали у двійковому кодуванні у формат, придатний для показу на сегментному індикаторі.<br><br>Нормальна робота: <i>lt</i> (Lamp Test) та <i>rb</i> (Ripple Blanking) підтримуються відкритими, <i>en</i> (Enable) підтримується закритим.
<!-- item: ec/bidir_led -->
Двобічний світлодіод
<!-- item: ec/binary_counter -->
Містить внутрішній лічильник, який змінює значення, коли через контакт входу годинника <i>&gt;</i> подається пульсація.<br><br>Нормальний режим роботи: <i>en</i> (Enable або Увімкнути) і <i>u/d</i> (Up/Down або Вгору/Вниз) утримуються відкритими, <i>r</i> (Reset або Скинути) закрито.
<!-- item: ec/buffer -->
Очищує логічний вхід із виведенням стану «відкрито» або «закрито» залежно від рівня вхідного перемикання.
<!-- item: ec/bus -->
Об’єднує декілька з’єднань у одне.
<!-- item: ec/capacitor -->
Зберігає електричний заряд.<br><br>Напругу між обкладками конденсатора та ємність пов’язано формулою <i>Заряд = Ємність x Напруга</i>.
<!-- item: ec/cccs -->

<!-- item: ec/ccvs -->

<!-- item: ec/clock_input -->
Генератор прямокутних імпульсів, виводить логічні струми «відкрито»/«закрито» з регулярними інтервалами.
<!-- item: ec/current_source -->
Є джерелом сталого струму.
<!-- item: ec/currentprobe -->
Показує силу струму у точці зондування на осцилоскопі.
<!-- item: ec/d_flipflop -->
Запам’ятовує стан входу та видає його на вихід після надходження імпульсу синхронізації.
<!-- item: ec/dac -->
Перетворює вхідний цифровий сигнал на вихідний аналоговий.
<!-- item: ec/demultiplexer -->
Розділяє вхідний потік даних на компоненти. Значення вхідного сигналу передається на вихід «X», який визначається двійковим числом, що задається входами «A».
<!-- item: ec/diode -->
Дозволяє проходження струпу у напрямку, позначеному стрілкою, якщо досягнуто певної різниці потенціалів.
<!-- item: ec/dpdt_toggle -->
Перемикач із двома полюсами і двома напрямками.
<!-- item: ec/dpst_toggle -->
Перемикач із двома полюсами і одним напрямком.
<!-- item: ec/external_connection -->
Точка з’єднання схеми із зовнішнім об’єктом — механічним компонентом або зовнішньою схемою, якщо елемент є частиною підсхеми.
<!-- item: ec/fixed_voltage -->
Точка фіксованої напруги для з’єднання з нею компонентів.
<!-- item: ec/ground -->
Точка землі (0 В)
<!-- item: ec/inductor -->

<!-- item: ec/inverter -->
Вихід є логічно інвертованим сигналом відносно вхідного логічного стану.
<!-- item: ec/jk_flipflop -->
Стан виходу визначається за J і K, коли надходить сигнал синхронізації.
<!-- item: ec/keypad -->
Числовий масив перемикачів «натиснути, щоб з’єднати» із трьома рядками і придатною до налаштовування кількістю стовпчиків клавіш.
<!-- item: ec/led -->
Світлодіод
<!-- item: ec/logic_input -->
Дає визначений користувачем логічний стан.<br><br>Натисніть для сигналу відкриття або перетягніть вказівник назовні, щоб відкрити вихід.
<!-- item: ec/logic_output -->
Показує логічний стан вхідного сигналу.
<!-- item: ec/magnitudecomparator -->
Порівнює два двійкові числа і створює вихідний сигнал для позначення того, яке з двійкових чисел є більшим. Має 3 каскадних входи:<ul><li>I: A &gt; B</li><li>I: A &lt; B</li><li>I: A = B</li></ul>і 3 виходи:<ul><li>O: A &gt; B</li><li>O: A &lt; B</li><li>O: A = B</li></ul>
<!-- item: ec/matrix_display -->
Матричний дисплей з LED із придатною до налаштовування кількістю стовпчиків і рядків.
<!-- item: ec/matrix_display_driver -->
Різновид знакосинтезувального індикатора, елементи якого згруповані за рядками та стовпцями. Матричний індикатор призначений для виведення зображень символів, спеціальних знаків та графічних об’єктів на різноманітних пристроях для зорового сприйняття.
<!-- item: ec/multiplexer -->
Поєднує вхідний потік даних у один потік. Значення вхідного сигналу, що визначається входами «A» передається на вихід.
<!-- item: ec/nand -->
Вихід закрито, якщо усі входи відкрито.
<!-- item: ec/nemosfet -->

<!-- item: ec/njfet -->

<!-- item: ec/nor -->
Вихід відкрито, якщо усіх входи закрито.
<!-- item: ec/npnbjt -->

<!-- item: ec/opamp -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify">An <span style="font-weight:600">operational amplifier</span> (opamp) is an integrated universal amplifier which's behaviour can simply be configured by external components. Those high flexibility is achieved due to it's high open loop gain <span style="font-style:italic">A</span><span style="vertical-align:sub">0</span> which amplifies the difference of the input potentials. The <a href="ktechlab-help:///transferfunction">transfer function</a> is:</p>
<p align="center"><img src=opamp.png ></p>
<p align="center"><img src=tf_op.png ></p>
<p align="justify">The open loop gain <span style="font-style:italic">A</span><span style="vertical-align:sub">0</span> is the value of the <a href="ktechlab-help:///complex">complex</a> gain <span style="font-style:italic;text-decoration:underline">A</span> in case of f = 0Hz (d.c. voltage) and is ideally infinite, in praxis depending on type 10<span style="vertical-align:super">5</span> to 10<span style="vertical-align:super">7</span>.</p>
<p align="justify">The whiched behaviour is achived by <a href="ktechlab-help:///feedback">feedback</a> of output to the input using discrete components. This way a <a href="ktechlab-help:///controlloop">control loop</a> is closed, which should eliminate control deviation, thus the input voltage U<span style="vertical-align:sub">E </span> here. From this it follows that, except for few exceptions, both inputs of a working opamp circuit must have equal <a href="ktechlab-help:///potential">potential</a>. This realisation is very useful for calculation and error diagnostics!</p>
<p align="justify">In most cases opamps can assumed to be ideal and <a href="ktechlab-help:///linear">linear</a> in operating range:</p>
<ul type="disc"><li><span style="font-style:italic">A = A</span><span style="vertical-align:sub">0</span> = &#8734;</li>
<li>R<span style="vertical-align:sub">E+ </span>= R<span style="vertical-align:sub">E- </span>= &#8734;&#937;</li>
<li>R<span style="vertical-align:sub">A</span> = 0&#937;</li></ul>
<p align="justify">Характеристики справжніх операційних підсилювачів викладено у відповідній <a href="ktechlab-help:///datasheet">технічній документації</a>.</p>
<p><span style="font-weight:600">Застосування:</span></p>
<ul type="disc"><li><a href="ktechlab-example:///opamps/inverting-amplifier.circuit">Inverting amplifier</a>    </li>
<li><a href="ktechlab-example:///opamps/noninverting-amplifier.circuit">Noninverting amplifier</a>    </li>
<li><a href="ktechlab-example:///opamps/decoupler.circuit">Decoupler</a>    </li>
<li><a href="ktechlab-example:///opamps/instrumentation-amplifier.circuit">Instrumentation amplifier</a>    </li>
<li><a href="ktechlab-example:///opamps/pid_controller.circuit">PID controller</a>    </li>
<li><a href="ktechlab-example:///opamps/analog-computer.circuit">Analog computer</a>    </li>
<li><a href="ktechlab-example:///opamps/active-filter.circuit">Active filter</a>    </li>
<li><a href="ktechlab-example:///opamps/comperator.circuit">Comperator</a>    </li>
<li><a href="ktechlab-example:///opamps/schmitt-trigger">Schmitt-Trigger</a></li></ul>
</body></html>
<!-- item: ec/or -->
Вихід відкрито, якщо відкрито принаймні один із входів. Вихід закрито, якщо усі входи закрито.
<!-- item: ec/parallel_port -->
The pins are divided into 3 registers.<br><br><b>Data Pins</b><br><br>The data pins can be configured as either all input or all output. They are:<ul><li><b>D<i>[0..7]</i></b></li></ul><br><b>Status Pins</b><br><br>The status pins are read-only. They area:<ul><li><b>ERR</b> - Error</li><li><b>ON</b> - Online</li><li><b>PE</b> - Paper End</li><li><b>ACK</b> - Acknowledge</li><li><b>BUSY</b> - Busy</li></ul><br><b>Control Pins</b><ul><li><b>STR</b> - Strobe</li><li><b>AUT</b> - Auto Feed</li><li><b>INIT</b> - Init</li><li><b>SEL</b> - Select</li></ul><br>The remaining pins are all ground.
<!-- item: ec/pemosfet -->

<!-- item: ec/pic -->
The PIC component allows the simulation of a PIC program.<br><br>The loadable PIC program must be one of the following formats:<ul><li>Assembly (.asm)</li><li>FlowCode (.flowcode)</li><li>Symbol file (.cod)</li><li>Microbe (.microbe, .basic)</li><li>C source (.c)</li></ul>Doubleclick on the PIC component to open up the program source file.<br><br>If the program source file is of type assembly, then the opened text file will automatically be linked to the simulation. You can control the program from the text document using the debug controls.<br><br>Explanation of buttons:<ul><li>Play - Run the PIC program from the point at which it was paused, or from the start otherwise.</li><li>Pause - Pause the simulation at the current execution point.</li><li>Stop - Reset all parts of the simulation.</li><li>Reload - Reread the PIC program from disk and restart gpsim.</li></ul>
<!-- item: ec/pjfet -->

<!-- item: ec/pnpbjt -->

<!-- item: ec/potentiometer -->
Складається з резистора із контактами на кінцях і центрального контакту, який з’єднується із рухомою позицією на резисторі.
<!-- item: ec/probe -->
З’єднайте цей зонд із точкою схеми, де треба виміряти логічне значення. Значення буде показано на панелі осцилоскопа.
<!-- item: ec/ptb_switch -->

<!-- item: ec/ptm_switch -->

<!-- item: ec/ram -->
This RAM stores data as a collection of words; each of which contains <i>word size</i> bits of data.<br><br>To read data, set the CS (<i>chip select</i>) and the OE (<i>output enable</i>) pins high, and select the word using the address pins <i>A*</i>. The word is outputted on the data-out pins: <i>DO*</i>.<br><br>To write data, set the CS (<i>chip select</i>) and the WE (<i>write enable</i>) pins high, and select the address to write to with the <i>A*</i> pins. Write to the selected word using the data-in pins: <i>DI*</i>.<br><br>The <i>Address Size</i> is the number of bits that determine an address; so the total number of words stored will be 2^<sup><i>Address Size</i></sup>.
<!-- item: ec/resistor -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify">A <span style="font-weight:600">resistor</span> limits flow of current, obeying Ohms Law which says, that current and voltage are proportional each other. By define proportional coefficient to 1 we get the unit:</p>
<p align="center"><img src=ohm.png ></p>
<p align="center"><img src=ohm_unit.png ></p>
<p align="justify">Thus these value is a measure how worse a resistor conduct the current. In practice an other measure has established how good current is conducted. For this purpose the reciprocal is generated an a new dimension, the <span style="font-style:italic">susceptance</span> is introduced:</p>
<p align="center"><img src=siemens.png ></p>
<p align="center"><img src=siemens_unit.png ></p>
<p align="justify">For better understanding it is allways a good idea to illustrate the practical meaning of such formulas by explaining them in words. That is very easy here:</p>
<p align="justify">&quot;Резистор із опором у 1 ом, якщо маємо на його контактах напругу у 1 вольт пропускатиме струм із силою у 1 ампер.&quot;</p>
<p><span style="font-weight:600">Приклади:</span></p>
<ul type="disc"><li><a href="ktechlab-example:///basic/resistors-series.circuit">Послідовне з’єднання</a></li>
<li><a href="ktechlab-example:///basic/resistors-parallel.circuit">Паралельне з’єднання</a></li></ul>
</body></html>
<!-- item: ec/resistordip -->
Набір резисторів із однаковими опорами, запакований у корпус DIP.
<!-- item: ec/roto_switch -->
Обертовий перемикач
<!-- item: ec/serial_port -->
Interface to a serial port. The pins are:<br><ul><li><b>CD</b> - Carrier Detect (control; output)</li><li><b>RD</b> - Received Data (data; output)</li><li><b>TD</b> - Transmitted Data (data; input)</li><li><b>DTR</b> - Data Terminal Ready (control; input)</li><li><b>GND</b> - Signal Ground (ground)</li><li><b>DSR</b> - Data Set Ready (control; input)</li><li><b>RTS</b> - Request to Send (control; input)</li><li><b>CTS</b> - Clear to Send (control; output)</li><li><b>RI</b> - Ring Indicator (control; output)</li></ul>
<!-- item: ec/seven_segment -->
Сегментний індикатор із десятковою крапкою. Можна налаштувати як типовий катодний або типовий анодний.
<!-- item: ec/signal_lamp -->
Проста сигнальна лампа розжарювання із опором у 100 Ом, якщо з’єднано послідовно.
<!-- item: ec/spdt_toggle -->
Перемикач із одним полюсом і двома напрямками.
<!-- item: ec/spst_toggle -->
Перемикач із одним полюсом і одним напрямком.
<!-- item: ec/sr_flipflop -->
Створює стан «відкрито» на виході, якщо відкрито <i>set</i>, і стан «закрито», якщо відкрито <i>reset</i>.
<!-- item: ec/subcircuit -->

<!-- item: ec/variablecapacitor -->
Зберігає електричний заряд.<br><br>Напругу між обкладками конденсатора та ємність пов’язано формулою <i>Заряд = Ємність x Напруга</i>.
<!-- item: ec/variableresistor -->
Обмежує струм відповідно до закону Ома
<!-- item: ec/vccs -->

<!-- item: ec/vcvs -->

<!-- item: ec/voltage_signal -->
Надає спектр сигналів напругою.
<!-- item: ec/voltageprobe -->
Показує напругу у точці зондування на осцилоскопі.
<!-- item: ec/voltmeter -->
Вставте його у схему паралельно, щоб виміряти напругу між двома точками.
<!-- item: ec/xnor -->
Шлюз виключного АБО-НІ. Вихід буде закрито, якщо відкрито лише один з входів.
<!-- item: ec/xor -->
Шлюз виключного АБО. Вихід буде відкрито, якщо відкрито лише один вхід.
<!-- item: feedback -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p>Цього запису довідки українською ще немає. Допоможіть KTechlab, створивши цей запис: натисніть кнопку &quot;Змінити&quot;!</p>
</body></html>
<!-- item: flow/callsub -->
Виклик підпрограми. Після завершення роботи підпрограми виконання коду буде продовжено з цієї точки.
<!-- item: flow/delay -->
Затримати виконання програми на фіксований проміжок часу.
<!-- item: flow/embed -->
Двічі клацніть на елементі, щоб редагувати вбудований до нього код.
<!-- item: flow/end -->
Завершити виконання програми, перемкнувши контролер інтерфейсу у режим сну. На відміну від частини «Початок», ця частина діаграми є необов’язковою для належного виконання програми.
<!-- item: flow/forloop -->
The code contained in the foor loop is repeatedly executed. By default, the variable used will be incremented every time. This can be changed by entering a value other than 1 into Step.<br><br>The for loop will exit when the value contained in the variable is equal to the end value.
<!-- item: flow/keypad -->
Отримати значення натиснутої клавіші з клавіатурної панелі, яку з’єднано з PIC.
<!-- item: flow/readport -->
Надати змінній значення з порту.
<!-- item: flow/repeat -->
Repeatedly execute code, until the given condition is false. The condition is checked after the code has been executed.<br><br>This is different from "While", which checks for the condition to be true before the code is executed.
<!-- item: flow/setpin -->
Встановлює для контакту на порті значення «відкрито» або «закрито». Контакт має бути налаштовано як вихід.
<!-- item: flow/sevenseg -->
Вивести дані на сегментний індикатор.
<!-- item: flow/start -->
Визначає початкову точку виконання програми.
<!-- item: flow/sub -->
Визначає вхідну точку підпрограми. Викликати підпрограму можна командою «Call Підпрограма»
<!-- item: flow/testpin -->
Точка розгалуження за умовою, залежно від стану (відкрито або закрито) контакту.
<!-- item: flow/unary -->
A unary operation involves only one variable. Suppo operations are:<br><ul><li><b>Rotate Left</b> rotates the binary bits of the variable left (discarding the end bits).</li><li><b>Rotate Right</b> rotates the binary bits right (discarding the start bits).</li><li><b>Increment</b> increases the value of the variable by 1. A value of 255 wraps around to 0.</li><li><b>Decrement</b> decreases the value of a variable by 1. A value of 0 wraps around to 255.</li></ul>
<!-- item: flow/varassignment -->
Assigns the evaluation of an expression to a variable. The expression can take many forms. For example:<ul><li><b>x = 2</b></li><li><b>x = y + 3</b></li><li><b>x = y + z</b></li><li><b>x = 2 * y</b></ul>
<!-- item: flow/varcomparison -->
Conditional branch point, depending on the comparison of two values. The supported comparisons are:<ul><li><b>x == y</b> - Equality: true if x has the same value as y.</li><li><b>x &lt; y</b> - Less than: true if x is smaller than y.</li><li><b>x &gt; y</b> - Greater than: true if x is bigger than y.</li><li><b>x &lt;= y</b> - Less than or equal: true if x is less than or equal to y.</li><li><b>x &gt;= y</b> - Greater than or equal: true if x is greater than or equal to y.</li><li><b>x != y</b> - Does not equal: true if x does not have the same value as y.</li></ul>
<!-- item: flow/while -->
Repeatedly execute code, until the given condition is false. The condition is checked before the code has been executed.<br><br>This is different from "Repeat", which checks for the condition to be true after the code is executed.
<!-- item: flow/writeport -->
Встановлює стан порту (відкрито або закрито) за вказаним значенням. Встановлювати значення можна лише для контактів, які налаштовано як виходи.
<!-- item: linear -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p>Цього запису довідки українською ще немає. Допоможіть KTechlab, створивши цей запис: натисніть кнопку &quot;Змінити&quot;!</p>
</body></html>
<!-- item: storage -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p><span style="font-weight:600">Елементи-накопичувачі</span> — елементи, які можуть зберігати електричну або механічну енергію і повертати її.</p>
<p>У електроніці це:</p>
<ul type="disc"><li>Конденсатор</li>
<li>Індукційна котушка</li></ul>
<p>У механіці:</p>
<ul type="disc"><li>Матеріальне тіло (маса)</li>
<li>Пружина</li></ul>
</body></html>
<!-- item: transferfunction -->
<html><head><meta name="qrichtext" content="1" /></head><body>
<p align="justify">A <span style="font-weight:600">transfer-function</span> is a mathematical model of a system. Generally it is given by the division of the resulting output signal to an adequate input signal. By multiplicating this transfer function with any input signal, the input information disappears and we get the output signal.</p>
<p align="justify">In the simplest case of a <a href="ktechlab-help:///linear">linear</a> <a href="ktechlab-help:///system">SISO system</a> without <a href="ktechlab-help:///storage">storage elements</a> the transfer function reduces to a scalar gain. Here any input signal is practical because system behaviour is independent from it.</p>
<p align="justify">By adding storage elements the scalar gain becomes a <a href="ktechlab-help:///complex">complex</a> gain in frequency domain. This includes information about frequency dependent gain and phase shift in static (i.e. steady state) case. In order to describe dynamic (i.e. transient) behaviour as well we use the transfer function in complex variable domain which also contains information about damping procedure. The adequate input signal here is a dirac impulse which consist of superposition of <span style="font-style:italic">all</span> frequencies in equal amplitude and thus can worm all needed information out of the system.</p>
<p align="justify">This realisation also has very practical meaning, by the way. Given that in practice a shot looks like a dirac impulse in spectrum we can fire a gun in a cathedral for example and record the echo. Now we have the transfer function of the cathedral. When <a href="ktechlab-help:///convolution">convolve</a> this with any audio recording it will sound like played in the cathedral.</p>
</body></html>
