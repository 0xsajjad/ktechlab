<!-- kate: tab-width 2; indent-mode xml; -->
<chapter id="flowcode">
	<title
>&flowcode;</title>
	
	<sect1 id="flowcode_introduction">
		<title
>Вступ</title>
		
		<para
>За допомогою &flowcode; можна дуже швидко і просто побудувати програму PIC. Після створення користувачем блок-схеми на основі доступних програмних частин &ktechlab; може перетворити цю блок-схему на код у одному з декількох форматів. Для виведення результатів у форматі шістнадцяткового коду, наприклад, буде виконано такий ланцюжок перетворень:</para>
		
		<orderedlist>
			<listitem
><para
>&flowcode; буде перетворено на &microbe;, код високорівневої мови програмування, компілятор якої є частиною пакунка &ktechlab;.</para
></listitem>
			<listitem
><para
>Після цього програма <command
>microbe</command
> створить на основі файла &microbe; код асемблера PIC.</para
></listitem>
			<listitem
><para
>Нарешті, програма <command
>gpasm</command
> на основі коду асемблера PIC створить набір шістнадцяткових кодів програми PIC.</para
></listitem>
		</orderedlist>
		
		<para
>Звичайно ж, якщо у вашій системі не встановлено пакунок gputils, частиною якого є <command
>gpasm</command
>, останній крок виконати не вдасться.</para>
		
	</sect1>
	
	<sect1 id="flowcode_creation">
		<title
>Створення програми</title>
		
		<para
>У кожної програми &flowcode; має бути одна точка входу — місце, з якщо програма запускатиметься після вмикання живлення PIC. Щоб визначити цю точку, відкрийте бічну панель частин діаграми, розташовану ліворуч, і перетягніть на полотно частину <guilabel
>Початок</guilabel
>. &ktechlab; дозволить вам створити лише одну частину такого типу.</para>
		
		<para
>Після цього ви зможете побудувати вашу програму, використовуючи типові частини з лівої бічної панелі або вводячи власний код (у форматі коду асемблера або &microbe;) за допомогою частини <guilabel
>Вставка</guilabel
>. Порядок виконання програми керується з’єднаннями між частинами діаграми. Докладний опис створення з’єднань можна знайти у розділі <xref linkend="connecting_components"/>.</para>
		
		<para
>&flowcode; накладає додаткові обмеження, окрім визначених схемою, на з’єднувані частини. Наприклад, будь-яка частина діаграми може мати лише одне вихідне з’єднання. Додаткові обмеження описано у розділі <xref linkend="nestling_flowcode"/>.</para>
	</sect1>
	
	<sect1 id="pic_settings">
		<title
>Параметри PIC</title>
		
		<para
>Після створення документа &flowcode; у верхньому лівому куті робочої області буде показано зображення PIC, яким ви користуєтеся. Це зображення відповідає початковим параметрам PIC.</para>
		
		<para
>Кожен контакт на зображенні PIC відповідає початковому типу контакту (вхід або вихід) та початковому стану (відкрито чи закрито). Ви можете змінити тип контакту перетягуванням, а його стан — клацанням лівою кнопкою миші.</para>
		
		<para
>За допомогою діалогового вікна <guilabel
>Параметри</guilabel
>, відкрити яке можна натисканням кнопки <guibutton
>Параметри</guibutton
>, ви можете редагувати початкові типи і стани контактів, у цьому випадку, редагуючи двійкові значення, записані до регістрів PORT і TRIS. Втім, як і визначення параметрів окремих контактів, це діалогове вікно надає змогу змінити лише початкові значення змінних у програмі PIC.</para>
		
		<para
>У нижній частині вікна буде показано список поточних визначених карт контактів, а також кнопки для керування цими картами. Карти контактів використовуються для визначення способу, у який сегментний індикатор або клавіатуру з’єднано з PIC. Щоб скористатися частинами &flowcode; <guilabel
>Сегментний індикатор</guilabel
> або <guilabel
>Клавіатура</guilabel
>, вам слід спочатку визначити тут карту контактів.</para>
		
	</sect1>
	
	<sect1 id="nestling_flowcode">
		<title
>Вкладення &flowcode;</title>
		
		<para
>Багато частин діаграми, зокрема підпрограми і цикли, можуть містити програмний код. Після створення таких контейнерів ви зможете додати до них частини діаграми простим перетягуванням зі скиданням частин до контейнера. При цьому програма підсвічуватиме контейнер, щоб позначити, що він стане батьківським елементом для нової частини діаграми.</para>
		
		<para
>Контейнер є відповідальним за усі вкладені до нього частини діаграми. Якщо натиснути кнопку згортання контейнера, усі частини діаграми, що містяться у ньому, буде приховано. І навпаки, якщо знову натиснути кнопку згортання, усі ці частини знову буде показано. Ви не зможете створювати з’єднання між окремими частинами у різних контейнерах, а вміст контейнера пересуватиметься лише разом із самим контейнером.</para>
		
	</sect1>
	
</chapter>
